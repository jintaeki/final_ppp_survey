<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.IMappingRepository">
   	<select id="setMapping" resultType="com.mycompany.webapp.dto.MappingDTO">
		<![CDATA[
			INSERT INTO MAPPING (SURVEY_SEQ,
			                     RATER_ID,
			                     APPRAISEE_ID,
			                     SURVEY_COMPLETE_YN,
			                     REG_DATE,
			                     UPDATE_DATE)
    		SELECT
    			SSQ,
   				RATER,
    			APPRAISEE,
    			'N',
    			REG_D,
    			UPDATE_D
    			FROM(
    			    SELECT
    				    SSQ,
    					RATER,
    					APPRAISEE,
    					'N',
                        REG_D,
                        UPDATE_D,
    					ROW_NUMBER() OVER (PARTITION BY RATER
    					                       ORDER BY RATER) AS NUM
					FROM(
						SELECT
    				    	SSQ,
    						RATER,
    						APPRAISEE,
    						'N',
                        	REG_D,
                        	UPDATE_D
                     	FROM(
							SELECT
    				    		SSQ,
    							RATER,
    							APPRAISEE,
    							'N',
                        		REG_D,
                        		UPDATE_D
							FROM(
								SELECT DISTINCT
 				    			   S.SURVEY_SEQ AS SSQ,
        			 			   R.PARTICIPATION_EMPLOYEE_ID AS RATER,
       				   			   A.PARTICIPATION_EMPLOYEE_ID AS APPRAISEE,
        			   			  'N',
                        		  SYSDATE AS REG_D,
                        		  SYSDATE AS UPDATE_D
    							FROM SURVEY_LIST S,
    					    		 PROJECT_HISTORY R,
    					    		 PROJECT_HISTORY A,
    					    		 PROJECT P,
    					    		 USER_INFO I
         						WHERE R.PROJECT_ID = A.PROJECT_ID
           						  AND R.PARTICIPATION_EMPLOYEE_ID != A.PARTICIPATION_EMPLOYEE_ID
           						  AND I.EMPLOYEE_ID = A.PARTICIPATION_EMPLOYEE_ID
            					  AND I.GRADE_ID = 2
                        		  AND R.PROJECT_ID = P.PROJECT_ID
           						  AND P.PROJECT_CLOSED_DATE >= TO_CHAR(SYSDATE -(30 * #{month}) , 'YYYY-MM-dd')
           			  	  		AND S.SURVEY_SEQ = #{surveySeq}
       						) 
                		LEFT JOIN
                   			(SELECT 
                    	 	  M.RATER_ID,
                    	 	  M.APPRAISEE_ID
                    		FROM MAPPING M,
                    	     	SURVEY_LIST SS
                    		WHERE M.SURVEY_SEQ = SS.SURVEY_SEQ
                    		  AND SS.SURVEY_START_DATE <= SYSDATE
                    		  AND SS.SURVEY_CLOSED_DATE >= SYSDATE) M
                		ON RATER = M.RATER_ID 
               	   	   AND APPRAISEE = M.APPRAISEE_ID
              	     WHERE M.RATER_ID IS NULL
                       AND M.APPRAISEE_ID IS NULL
            			)
            		ORDER BY DBMS_RANDOM.VALUE
            		)
            	)
			WHERE NUM <= #{number}
		]]>
	</select>
	
	<insert id="insertEmail" parameterType="com.mycompany.webapp.dto.NoticeEmailDTO">
		INSERT INTO NOTICE_EMAIL(
			EMAIL_SEQ,
			RATER_ID,
			EMAIL,
			SURVEY_LINK,
			DELIVERY_DATE,
			DELIVERY_YN,
			DELIVERY_CONTENT,
			SURVEY_SEQ,
			REG_DATE,
			UPDATE_DATE
		)
		SELECT 
    		EMAIL_SEQ.NEXTVAL,
            RATER_ID,
			EMAIL,
			SURVEY_LINK,
			DELIVERY_DATE,
			DELIVERY_YN,
			DELIVERY_CONTENT,
			SURVEY_SEQ,
			REG_DATE,
			UPDATE_DATE
        FROM(SELECT DISTINCT
                EMPLOYEE_ID AS RATER_ID,
                EMAIL,
                'localhost/manyface' AS SURVEY_LINK,
                SYSDATE AS DELIVERY_DATE,
                'N' AS DELIVERY_YN,
                '이메일 생성' AS DELIVERY_CONTENT,
                MAPPING.SURVEY_SEQ,
                SYSDATE AS REG_DATE,
                SYSDATE AS UPDATE_DATE
            FROM USER_INFO,
                 MAPPING,
                 SURVEY_LIST
            WHERE MAPPING.SURVEY_SEQ = #{surveySeq}
              AND EMPLOYEE_ID = RATER_ID
              AND MAPPING.SURVEY_SEQ = SURVEY_LIST.SURVEY_SEQ
            ORDER BY EMPLOYEE_ID)
        LEFT JOIN
    		(SELECT 
          		RATER_ID AS RATER
     		 FROM NOTICE_EMAIL 
            WHERE SURVEY_SEQ = #{surveySeq}) L
          ON RATER_ID = L.RATER
       WHERE L.RATER IS NULL
	</insert>
	
	<insert id="insertSMS" parameterType="com.mycompany.webapp.dto.NoticeSmsDTO">
		 INSERT INTO NOTICE_SMS(
			SMS_SEQ,
			RATER_ID,
			PHONE,
			SURVEY_LINK,
			DELIVERY_DATE,
			DELIVERY_YN,
			DELIVERY_CONTENT,
			SURVEY_SEQ,
			REG_DATE,
			UPDATE_DATE
		)
		SELECT 
    		SMS_SEQ.NEXTVAL,
            RATER_ID,
			PHONE,
			SURVEY_LINK,
			DELIVERY_DATE,
			DELIVERY_YN,
			DELIVERY_CONTENT,
			SURVEY_SEQ,
			REG_DATE,
			UPDATE_DATE
        FROM(SELECT DISTINCT
                EMPLOYEE_ID AS RATER_ID,
                PHONE,
                'localhost/manyface' AS SURVEY_LINK,
                SYSDATE AS DELIVERY_DATE,
                'N' AS DELIVERY_YN,
                'sms 설정' AS DELIVERY_CONTENT,
                MAPPING.SURVEY_SEQ,
                SYSDATE AS REG_DATE,
                SYSDATE AS UPDATE_DATE
            FROM USER_INFO,
                 MAPPING,
                 SURVEY_LIST
            WHERE MAPPING.SURVEY_SEQ = #{surveySeq}
              AND EMPLOYEE_ID = RATER_ID
              AND MAPPING.SURVEY_SEQ = SURVEY_LIST.SURVEY_SEQ
            ORDER BY EMPLOYEE_ID)
        LEFT JOIN
    		(SELECT 
          		RATER_ID AS RATER
     		 FROM NOTICE_SMS 
            WHERE SURVEY_SEQ = #{surveySeq}) L
          ON RATER_ID = L.RATER
       WHERE L.RATER IS NULL
	</insert>
	
	<delete id="deleteEmail" parameterType="com.mycompany.webapp.dto.NoticeEmailDTO">
		DELETE 
          FROM NOTICE_EMAIL 
         WHERE SURVEY_SEQ = #{surveySeq}
	</delete>
	
	<delete id="deleteSMS" parameterType="com.mycompany.webapp.dto.NoticeSmsDTO">
		DELETE 
          FROM NOTICE_SMS  
         WHERE SURVEY_SEQ = #{surveySeq}
	</delete>
	
	
	<update id="updateState" parameterType="SLD">
		UPDATE SURVEY_LIST 
		   SET STATE_CODE = #{stateCode},
		       UPDATE_DATE = SYSDATE
		 WHERE SURVEY_SEQ = #{surveySeq}
	</update>
	
	<select id="stateCheck" resultType="String">
		SELECT STATE_CODE
		FROM SURVEY_LIST
		WHERE SURVEY_SEQ = #{surveySeq}
	</select>
	
	<delete id="deleteMapping" parameterType="com.mycompany.webapp.dto.MappingDTO">
		DELETE FROM MAPPING
		 WHERE SURVEY_SEQ = #{surveySeq}
	</delete>

	<select id="selectMappingData" parameterType="com.mycompany.webapp.dto.PagingDTO" resultType="com.mycompany.webapp.dto.PopupDTO">
	<![CDATA[
		SELECT 
                GRADE_ID,
				DEPARTMENT_ID,
				SURVEY_SEQ,
				RATER_ID,
        		APPRAISEE_ID,
				SURVEY_NAME,
				DEPARTMENT_NAME,
       		  	RATER_NAME, 
       		  	APPRAISEE_NAME, 
     		  	GRADE_NAME		
		FROM (
			SELECT ROWNUM AS rnum,
				  GRADE_ID,
				   DEPARTMENT_ID,
			       SURVEY_SEQ,
				   RATER_ID,
				   APPRAISEE_ID,
				   SURVEY_NAME,
				   DEPARTMENT_NAME,
       		  	   RATER_NAME, 
       		  	   APPRAISEE_NAME, 
     		  	   GRADE_NAME
			FROM(SELECT DISTINCT
                        UR.GRADE_ID,
				        UR.DEPARTMENT_ID,
				        M.SURVEY_SEQ,
				        M.RATER_ID,
				        M.APPRAISEE_ID,
				        S.SURVEY_NAME,
				        O.DEPARTMENT_NAME,
       		  	        UR.EMPLOYEE_NAME AS "RATER_NAME",
       		  	        UA.EMPLOYEE_NAME AS "APPRAISEE_NAME",
     		  	        G.GRADE_NAME
			       FROM PROJECT_HISTORY H,
     			        GRADE G,
     			        MAPPING M,
     		            USER_INFO UA,
     			        USER_INFO UR,
     			        SURVEY_LIST S,
                        ORGANIZATION_CHART O
			      WHERE UR.GRADE_ID = G.GRADE_ID
				    AND H.PARTICIPATION_EMPLOYEE_ID = M.APPRAISEE_ID
    			    AND UA.EMPLOYEE_ID = M.APPRAISEE_ID
    			    AND UR.EMPLOYEE_ID = M.RATER_ID
                    AND UR.DEPARTMENT_ID = O.DEPARTMENT_ID
    			    AND M.SURVEY_SEQ = S.SURVEY_SEQ
    			    AND M.SURVEY_SEQ = #{surveySeq}
	    			AND UR.EMPLOYEE_NAME LIKE '%' || #{keyword} || '%'
                	AND UR.DEPARTMENT_ID LIKE (
                    	CASE WHEN #{selection} = '60004' 
                         	 THEN '%' || '' || '%' 
                         	 ELSE '%' || #{selection} || '%'
                    	END) 	
                	AND UR.GRADE_ID LIKE (
                    	CASE WHEN #{selectGD} = '60004' 
                         	 THEN '%' || '' || '%' 
                         	 ELSE '%' || #{selectGD} || '%'
                    	END) 
                    AND UA.EMPLOYEE_NAME LIKE '%' || #{keyword2} || '%'
               		AND UA.DEPARTMENT_ID LIKE (
                    	CASE WHEN #{selection2} = '60004' 
                         	 THEN '%' || '' || '%' 
                         	 ELSE '%' || #{selection2} || '%'
                    	END)
						)
				WHERE ROWNUM <= #{endRowNo}		
			)
		WHERE rnum  >= #{startRowNo}
		
		
	]]>
	</select>
	
	<select id="selectGradeList" parameterType="map" resultType="com.mycompany.webapp.dto.GradeDTO">
		SELECT GRADE_ID
   			  ,GRADE_NAME
    		  ,RANK
		FROM GRADE
	</select>

	<select id="getPopup" parameterType="com.mycompany.webapp.dto.PagingDTO" resultType="com.mycompany.webapp.dto.PopupDTO">
    <![CDATA[
     	SELECT
     		PROJECT_ID,
     		PROJECT_NAME,
     		GRADE_ID,
     		R_DEPARTMENT_ID,
     		A_DEPARTMENT_ID,
     		SURVEY_SEQ,
     		RATER_ID,
     		APPRAISEE_ID,
     		SURVEY_NAME,
     		R_DEPARTMENT_NAME,
     		A_DEPARTMENT_NAME,
     		RATER_NAME,
     		APPRAISEE_NAME,
     		GRADE_NAME
     	FROM (
			SELECT 
				ROWNUM AS rnum,
				PROJECT_ID,
				PROJECT_NAME,
     			GRADE_ID,
     		    R_DEPARTMENT_ID,
     		    A_DEPARTMENT_ID,
     		    SURVEY_SEQ,
     		    RATER_ID,
     		    APPRAISEE_ID,
     		    SURVEY_NAME,
     		    R_DEPARTMENT_NAME,
     		    A_DEPARTMENT_NAME,
     		    RATER_NAME,
     		    APPRAISEE_NAME,
     		    GRADE_NAME
   			FROM(SELECT
     			 	A.PROJECT_ID,
     			 	P.PROJECT_NAME,
     			 	UR.GRADE_ID,
				    UR.DEPARTMENT_ID   AS "R_DEPARTMENT_ID",
				    UA.DEPARTMENT_ID   AS "A_DEPARTMENT_ID",
				    S.SURVEY_SEQ,
				    UR.EMPLOYEE_ID     AS "RATER_ID", 
				    UA.EMPLOYEE_ID     AS "APPRAISEE_ID",
			    	S.SURVEY_NAME,
			    	O.DEPARTMENT_NAME  AS "R_DEPARTMENT_NAME",
				    OA.DEPARTMENT_NAME AS "A_DEPARTMENT_NAME",
	     		    UR.EMPLOYEE_NAME   AS "RATER_NAME",
	      		    UA.EMPLOYEE_NAME   AS "APPRAISEE_NAME",
	     		    G.GRADE_NAME
       			FROM
            		SURVEY_LIST S,
            		PROJECT_HISTORY R,
            		PROJECT_HISTORY A,
            		PROJECT P,
            		ORGANIZATION_CHART O,
            		ORGANIZATION_CHART OA,
             		USER_INFO UA,
             		USER_INFO UR,
             		GRADE G
       			WHERE R.PROJECT_ID = A.PROJECT_ID
         	 	  AND R.PARTICIPATION_EMPLOYEE_ID <> A.PARTICIPATION_EMPLOYEE_ID
         	 	  AND UA.GRADE_ID = 2
         	  	  AND UR.GRADE_ID = G.GRADE_ID
         	   	  AND UA.EMPLOYEE_ID = A.PARTICIPATION_EMPLOYEE_ID
         	  	  AND UR.DEPARTMENT_ID = O.DEPARTMENT_ID
         	  	  AND UA.DEPARTMENT_ID = OA.DEPARTMENT_ID
              	  AND R.PARTICIPATION_EMPLOYEE_ID = UR.EMPLOYEE_ID
              	  AND R.PROJECT_ID = P.PROJECT_ID
         	  	  AND P.PROJECT_CLOSED_DATE >= TO_CHAR(SYSDATE -(30 * #{month}), 'YYYY-MM-dd')
              	  AND R.PARTICIPATION_EMPLOYEE_ID = #{raterId}
              	  AND S.SURVEY_SEQ = #{surveySeq}
              	  AND NOT EXISTS
              		(SELECT 'X'
                 		FROM MAPPING M
                 		WHERE M.APPRAISEE_ID = UA.EMPLOYEE_ID
                   		  AND M.RATER_ID = UR.EMPLOYEE_ID
                   	  	  AND M.SURVEY_SEQ = #{surveySeq})
              	 AND UR.EMPLOYEE_NAME LIKE '%' || #{keyword} || '%'
                 AND UR.DEPARTMENT_ID LIKE (
                     CASE WHEN #{selection} = '60004' 
                          THEN '%' || '' || '%' 
                          ELSE '%' || #{selection} || '%'
                     END) 	
                 AND UR.GRADE_ID LIKE (
                     CASE WHEN #{selectGD} = '60004' 
                          THEN '%' || '' || '%' 
                          ELSE '%' || #{selectGD} || '%'
                     END) 
                 AND UA.EMPLOYEE_NAME LIKE '%' || #{keyword2} || '%'
                 AND UA.DEPARTMENT_ID LIKE (
                     CASE WHEN #{selection2} = '60004' 
                          THEN '%' || '' || '%' 
                          ELSE '%' || #{selection2} || '%'
                     END)
				 )
			WHERE ROWNUM <= #{endRowNo}		
			)
		WHERE rnum  >= #{startRowNo}
    ]]>
   	</select>
   	
   	<select id="getAnother" parameterType="com.mycompany.webapp.dto.PagingDTO" resultType="com.mycompany.webapp.dto.PopupDTO">
	<![CDATA[
		SELECT 
     		GRADE_ID,
     		R_DEPARTMENT_ID,
     		A_DEPARTMENT_ID,
     		SURVEY_SEQ,
     		RATER_ID,
     		APPRAISEE_ID,
     		SURVEY_NAME,
     		R_DEPARTMENT_NAME,
     		A_DEPARTMENT_NAME,
     		RATER_NAME,
     		APPRAISEE_NAME,
     		GRADE_NAME
	   	FROM(
	   		SELECT
				UR.GRADE_ID,
				UR.DEPARTMENT_ID   AS "R_DEPARTMENT_ID",
				UA.DEPARTMENT_ID   AS "A_DEPARTMENT_ID",
				S.SURVEY_SEQ,
				UR.EMPLOYEE_ID     AS "RATER_ID", 
				UA.EMPLOYEE_ID     AS "APPRAISEE_ID",
				S.SURVEY_NAME,
				O.DEPARTMENT_NAME  AS "R_DEPARTMENT_NAME",
				OA.DEPARTMENT_NAME AS "A_DEPARTMENT_NAME",
	     		UR.EMPLOYEE_NAME   AS "RATER_NAME",
	      		UA.EMPLOYEE_NAME   AS "APPRAISEE_NAME",
	     		G.GRADE_NAME
			FROM
	    		GRADE G,
	     	    USER_INFO UA,
	     	   	USER_INFO UR,
	     	    SURVEY_LIST S,
	            ORGANIZATION_CHART O,
	            ORGANIZATION_CHART OA
			WHERE UR.GRADE_ID = G.GRADE_ID
	          AND UR.DEPARTMENT_ID = O.DEPARTMENT_ID
	          AND UA.DEPARTMENT_ID = OA.DEPARTMENT_ID
         	  AND UA.GRADE_ID = 2
          	  AND UA.EMPLOYEE_ID != UR.EMPLOYEE_ID
          	  AND UR.MANAGER_YN = 'N'
          	  AND S.SURVEY_SEQ = #{surveySeq}
          	  AND NOT EXISTS
          			(SELECT 'X'
                 	 FROM MAPPING M
                	WHERE M.APPRAISEE_ID = UA.EMPLOYEE_ID
                      AND M.RATER_ID = UR.EMPLOYEE_ID
                      AND M.SURVEY_SEQ = #{surveySeq})
           	  AND UR.EMPLOYEE_NAME LIKE '%' || #{keyword} || '%'
              AND UR.DEPARTMENT_ID LIKE (
                  CASE WHEN #{selection} = '60004' 
                       THEN '%' || '' || '%' 
                       ELSE '%' || #{selection} || '%'
                  END) 	
              AND UR.GRADE_ID LIKE (
                  CASE WHEN #{selectGD} = '60004' 
                       THEN '%' || '' || '%' 
                       ELSE '%' || #{selectGD} || '%'
                  END) 
              AND UA.EMPLOYEE_NAME LIKE '%' || #{keyword2} || '%'
              AND UA.DEPARTMENT_ID LIKE (
                  CASE WHEN #{selection2} = '60004' 
                       THEN '%' || '' || '%' 
                       ELSE '%' || #{selection2} || '%'
                  END)
		ORDER BY G.GRADE_ID DESC, UR.EMPLOYEE_NAME
		)
   	]]>
   	</select>
   	
   	<select id="ovrlpCheck" parameterType="map" resultType="com.mycompany.webapp.dto.MappingDTO">
   		<![CDATA[
   		SELECT 
            M.RATER_ID,
            M.APPRAISEE_ID
        FROM MAPPING M,
             SURVEY_LIST S
        WHERE M.SURVEY_SEQ = S.SURVEY_SEQ
          AND S.SURVEY_START_DATE <= SYSDATE
          AND S.SURVEY_CLOSED_DATE >= SYSDATE
          AND M.RATER_ID = #{raterId}
          AND M.APPRAISEE_ID = #{appraiseeId}
          ]]>
   	</select>

	<insert id="insertAppraisee" parameterType="com.mycompany.webapp.dto.MappingDTO">
		INSERT INTO MAPPING
			(SURVEY_SEQ,
			 RATER_ID,
			 APPRAISEE_ID,
			 SURVEY_COMPLETE_YN,
			 REG_DATE,
			 UPDATE_DATE)
 		VALUES
 			(#{surveySeq},
 			 #{raterId},
 			 #{appraiseeId},
 			 'N',
 			 SYSDATE,
 			 SYSDATE)
	</insert>

	<delete id="deleteAppraisee" parameterType="com.mycompany.webapp.dto.MappingDTO">
		DELETE FROM MAPPING
		 WHERE SURVEY_SEQ = #{surveySeq}
		   AND RATER_ID = #{raterId}
		   AND APPRAISEE_ID = #{appraiseeId}
	</delete>
	
</mapper>