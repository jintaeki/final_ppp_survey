<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ISurveyRepository">

      <insert id="insertQuestion" parameterType="SQD">
      <selectKey keyProperty="questionSeq" resultType="int" order="BEFORE">
         SELECT QUESTION_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>

				INSERT INTO SURVEY_QUESTION(QUESTION_SEQ
				    ,SURVEY_SEQ
				    ,QUESTION_CONTENT
				    ,QUESTION_TYPE_CODE
				    ,QUESTION_NUM
				    ,REG_DATE
				    ,UPDATE_DATE)
				VALUES (#{questionSeq}
				    ,#{surveySeq}
				    ,#{questionContent}
				    ,#{questionTypeCode}
				   		    ,(SELECT NVL2(MAX(QUESTION_NUM),MAX(QUESTION_NUM)+1,1) FROM SURVEY_QUESTION WHERE SURVEY_SEQ = #{surveySeq})
				    ,SYSDATE
				    ,SYSDATE)
	</insert>

<insert id="insertItem" parameterType="SQD">
		<selectKey keyProperty="itemSeq" resultType="int" order="BEFORE">
				SELECT ITEM_ID_SEQ.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO SURVEY_ITEM(QUESTION_SEQ
			     ,ITEM_SEQ
			     ,ITEM_CONTENT
			     ,ITEM_SCORE
			     ,ITEM_NUM
			     ,REG_DATE
			     ,UPDATE_DATE)
			VALUES (#{questionSeq}
			     ,#{itemSeq}
			     ,#{itemContent}
			     ,#{itemScore}
                 ,(SELECT NVL2(MAX(ITEM_NUM),MAX(ITEM_NUM)+1,1) FROM SURVEY_ITEM WHERE QUESTION_SEQ = #{questionSeq})
			     ,SYSDATE
			     ,SYSDATE)
	</insert>




   <insert id="setSurvey" parameterType="SLD" >

      <selectKey keyProperty="surveySeq" resultType="int" order="BEFORE">
         SELECT SURVEY_LIST_SEQ.NEXTVAL FROM DUAL
      </selectKey>

      INSERT INTO SURVEY_LIST (SURVEY_SEQ
             ,SURVEY_NAME
             ,SURVEY_CONTENT
             ,ANONYMITY_CHECK_CODE
             ,SURVEY_START_DATE
             ,SURVEY_CLOSED_DATE
             ,STATE_CODE
             ,REG_DATE
             ,UPDATE_DATE)
      VALUES(#{surveySeq}
             ,#{surveyName}
             ,#{surveyContent}
             ,#{anonymityCheckCode}
             ,TO_CHAR(#{surveyStartDate},'YYYY.MM.dd')
             ,TO_CHAR(#{surveyClosedDate} , 'YYYY.MM.dd')
             ,#{stateCode}
             ,SYSDATE
             ,SYSDATE)
   </insert>

   <update id="updateSurvey" parameterType="SLD">
      UPDATE SURVEY_LIST SET SURVEY_NAME=#{surveyName}
            ,SURVEY_CONTENT=#{surveyContent}
            ,ANONYMITY_CHECK_CODE=#{anonymityCheckCode}
            ,SURVEY_START_DATE=TO_CHAR(#{surveyStartDate},'YYYY.MM.dd')
            ,SURVEY_CLOSED_DATE=TO_CHAR(#{surveyClosedDate} , 'YYYY.MM.dd')
            ,UPDATE_DATE=sysdate  WHERE SURVEY_SEQ=#{surveySeq}
   </update>

<delete id="DeleteQuestion" parameterType="SQD">
      DELETE FROM SURVEY_QUESTION WHERE QUESTION_SEQ = #{questionSeq}
   </delete>

   <select id="selectSurvey" parameterType="int" resultType="SLD">
      SELECT SURVEY_SEQ
           ,SURVEY_NAME
           ,SURVEY_CONTENT
           ,ANONYMITY_CHECK_CODE
           ,to_date(SURVEY_START_DATE, 'YYYY-MM-dd') as surveyStartDate
           ,to_date(SURVEY_CLOSED_DATE, 'YYYY-MM-dd' ) as surveyClosedDate
           ,STATE_CODE
      FROM SURVEY_LIST
      WHERE SURVEY_SEQ = #{surveySeq}

   </select>


   <select id="getQuestionListOrderByDesc" parameterType="int" resultType="com.mycompany.webapp.dto.SurveyQuestionDTO">
      SELECT SURVEY_SEQ
          ,QUESTION_SEQ
          ,QUESTION_CONTENT
          ,QUESTION_TYPE_CODE
      FROM SURVEY_QUESTION WHERE SURVEY_SEQ = #{surveySeq} order by question_seq desc
   </select>

   <select id="getQuestionListOrderByAsc" parameterType="int" resultType="com.mycompany.webapp.dto.SurveyQuestionDTO">
      SELECT SURVEY_SEQ
          ,QUESTION_SEQ
          ,QUESTION_CONTENT
          ,QUESTION_TYPE_CODE
      FROM SURVEY_QUESTION WHERE SURVEY_SEQ = #{surveySeq} order by question_seq asc
   </select>

   <update id="UpdateQuestion" parameterType="com.mycompany.webapp.dto.SurveyQuestionDTO">
      UPDATE SURVEY_QUESTION SET QUESTION_CONTENT=#{questionContent}
          ,QUESTION_TYPE_CODE=#{questionTypeCode} WHERE QUESTION_SEQ=#{questionSeq}
   </update>

   <update id="sendMessage" parameterType="int">
      UPDATE SURVEY_LIST SET    STATE_CODE='30004' WHERE SURVEY_SEQ =#{surveySeq}
   </update>


    <update id="updateEmail" parameterType="com.mycompany.webapp.dto.NoticeEmailDTO">
   	  UPDATE NOTICE_EMAIL
   	  	 SET DELIVERY_YN = 'Y',
   	  	 	 DELIVERY_CONTENT = #{deliveryContent},
   	  	 	 UPDATE_DATE = SYSDATE
   	   WHERE SURVEY_SEQ = #{surveySeq}

   </update>


   <update id="updateSMS" parameterType="com.mycompany.webapp.dto.NoticeSmsDTO">
   	  UPDATE NOTICE_SMS
   	  	 SET DELIVERY_YN = 'Y',
   	  	     DELIVERY_CONTENT = #{deliveryContent},
   	  	 	 UPDATE_DATE = SYSDATE
       WHERE SURVEY_SEQ = #{surveySeq}
   </update>

   <update id="sendReEmail" parameterType="com.mycompany.webapp.dto.NoticeEmailDTO">
   	  UPDATE NOTICE_EMAIL
         SET UPDATE_DATE = SYSDATE,
             DELIVERY_CONTENT = #{deliveryContent}
      WHERE EMAIL_SEQ
         IN (SELECT EMAIL_SEQ
               FROM NOTICE_EMAIL N,
                    MAPPING M
              WHERE N.SURVEY_SEQ = #{surveySeq}
                AND N.SURVEY_SEQ = M.SURVEY_SEQ
                AND M.SURVEY_COMPLETE_YN = 'N'
                AND N.RATER_ID = M.RATER_ID)
   </update>

   <update id="sendReSMS" parameterType="com.mycompany.webapp.dto.NoticeSmsDTO">
      UPDATE NOTICE_SMS
         SET UPDATE_DATE = SYSDATE,
             DELIVERY_CONTENT = #{deliveryContent}
      WHERE SMS_SEQ
         IN (SELECT SMS_SEQ
               FROM NOTICE_SMS N,
                    MAPPING M
              WHERE N.SURVEY_SEQ = #{surveySeq}
                AND N.SURVEY_SEQ = M.SURVEY_SEQ
                AND M.SURVEY_COMPLETE_YN = 'N'
                AND N.RATER_ID = M.RATER_ID)
   </update>


<select id="searchListByKeyword" parameterType="com.mycompany.webapp.dto.PagingDTO" resultType="SLD">
   <![CDATA[
       SELECT
       		 rnum
       		,SURVEY_SEQ
            ,SURVEY_NAME
            ,SURVEY_CONTENT
            ,ANONYMITY_CHECK_CODE
            ,to_date(SURVEY_START_DATE, 'YYYY-MM-dd')  as surveyStartDate
            ,to_date(SURVEY_CLOSED_DATE, 'YYYY-MM-dd') as surveyClosedDate
            ,STATE_CODE
            ,CODE_DETAIL_NAME
       FROM COMMON_DETAIL cd, (
         SELECT   rnum
                 ,SURVEY_SEQ
                 ,SURVEY_NAME
                 ,SURVEY_CONTENT
                 ,ANONYMITY_CHECK_CODE
                  ,SURVEY_START_DATE
                 ,SURVEY_CLOSED_DATE
                 ,STATE_CODE
          FROM (SELECT ROWNUM AS rnum
		      	  ,SURVEY_SEQ
		      	  ,SURVEY_NAME
		      	  ,SURVEY_CONTENT
		      	  ,ANONYMITY_CHECK_CODE
	          	  ,SURVEY_START_DATE
		      	  ,SURVEY_CLOSED_DATE
		      	  ,STATE_CODE
	    	FROM (SELECT SURVEY_SEQ
	          	 ,SURVEY_NAME
	          	 ,SURVEY_CONTENT
	          	 ,ANONYMITY_CHECK_CODE
	          	 ,SURVEY_START_DATE
		      	 ,SURVEY_CLOSED_DATE
	          	 ,STATE_CODE
	          	 ,REG_DATE
	          	 FROM SURVEY_LIST
	          	 WHERE
	          	 (SURVEY_START_DATE is null and
	          	  SURVEY_NAME LIKE '%' || #{keyword} || '%' and
	          	  STATE_CODE LIKE (CASE
      							   WHEN #{selection} = '30005'
      							   THEN '%' || '' || '%'
                                   ELSE '%' || #{selection} || '%'
                                   END) AND
                  ANONYMITY_CHECK_CODE LIKE (CASE
                                                 WHEN #{anonyMityCheckCode} = '30005'
                                                 THEN '%' || '' || '%'
                                                 ELSE '%' || #{anonyMityCheckCode} || '%'
                                                 END)
	          	 )
	          	   or
	          	 SURVEY_START_DATE >= (CASE
	          	 						 WHEN #{surveyStartDate} is null
	          	 						 THEN sysdate-99999
	          	 						 WHEN #{surveyStartDate} is not null
	          	 						 THEN to_date(to_char(#{surveyStartDate},'yyyy-MM-dd'),'yyyy-MM-dd')
	          	 						 END) and

	          	  STATE_CODE LIKE (CASE
      							   WHEN #{selection} = '30005'
      							   THEN '%' || '' || '%'
                                   ELSE '%' || #{selection} || '%'
                                   END) and

	          	  SURVEY_NAME LIKE '%' || #{keyword} || '%'AND

	          	  ANONYMITY_CHECK_CODE LIKE (CASE
                                                 WHEN #{anonyMityCheckCode} = '30005'
                                                 THEN '%' || '' || '%'
                                                 ELSE '%' || #{anonyMityCheckCode} || '%'
                                                 END)
				  ORDER BY TO_DATE(REG_DATE, 'YYYY-MM-DD') DESC , ROWNUM DESC
                )
         	  WHERE ROWNUM <= #{endRowNo}
               )
            WHERE rnum  >= #{startRowNo}
           ) WHERE cd.code_detail_id = state_code
      ]]>
   </select>

   <select id="selectQuestionBySeq"  resultType="hashmap">
          SELECT SURVEY_QUESTION.SURVEY_SEQ
      		    ,SURVEY_QUESTION.QUESTION_SEQ
      		    ,SURVEY_QUESTION.QUESTION_CONTENT
                ,SURVEY_QUESTION.QUESTION_TYPE_CODE
                ,SURVEY_ITEM.ITEM_SEQ
                ,SURVEY_ITEM.ITEM_CONTENT
                ,SURVEY_ITEM.ITEM_SCORE
          FROM  SURVEY_ITEM  right join SURVEY_QUESTION
          on SURVEY_ITEM.QUESTION_SEQ = SURVEY_QUESTION.QUESTION_SEQ
          WHERE SURVEY_QUESTION.SURVEY_SEQ = #{surveySeq} and SURVEY_QUESTION.QUESTION_SEQ = #{questionSeq} ORDER BY SURVEY_QUESTION.QUESTION_SEQ DESC

   </select>

	<delete id="deleteItemByQSeq" parameterType="int">
		DELETE FROM SURVEY_ITEM
		WHERE QUESTION_SEQ = #{questionSeq}
	</delete>


   <select id="selectItems" parameterType="int" resultType="hashmap">

      SELECT si.ITEM_SEQ
           ,si.QUESTION_SEQ
              ,si.ITEM_CONTENT
              ,si.ITEM_SCORE
              ,sq.QUESTION_TYPE_CODE
      FROM SURVEY_ITEM si, SURVEY_QUESTION sq
      WHERE si.QUESTION_SEQ = sq.QUESTION_SEQ and si.QUESTION_SEQ = #{questionSeq}
   </select>

	<update id="surveyInsertComplete" parameterType="int">
		UPDATE SURVEY_LIST SET STATE_CODE = '30002' WHERE SURVEY_SEQ = #{surveySeq}
	</update>

	<delete id="deleteSurvey" parameterType="int">
		DELETE FROM SURVEY_LIST WHERE SURVEY_SEQ = #{surveySeq}
	</delete>



  <select id="selectSurveyEvaluate" parameterType="int" resultType="hashmap">
  		SELECT

              oc.department_name
             ,g.grade_name
             ,ui.employee_name
             ,m.SURVEY_COMPLETE_YN
        FROM grade g
             ,user_info ui
             ,mapping m
             ,ORGANIZATION_CHART oc
        WHERE m.rater_id = ui.employee_id and g.grade_id = ui.grade_id
        AND oc.department_id = ui.department_id and  m.survey_seq = #{surveySeq}

  </select>

	<select id="searchByEvaluate" parameterType="com.mycompany.webapp.dto.PagingDTO" resultType="hashmap">
 	<![CDATA[
		SELECT
		rnum
        ,DEPARTMENT_NAME
        ,GRADE_NAME
        ,EMPLOYEE_NAME
        ,SURVEY_COMPLETE_YN
        ,SURVEY_SEQ
        ,EMPLOYEE_ID
        FROM ( SELECT
                 ROWNUM AS rnum
                ,SURVEY_SEQ
                ,DEPARTMENT_NAME
                ,GRADE_NAME
                ,EMPLOYEE_NAME
                ,SURVEY_COMPLETE_YN
                ,EMPLOYEE_ID
        FROM ( SELECT
                        distinct
                        m.SURVEY_SEQ
                        ,oc.DEPARTMENT_NAME
                        ,g.GRADE_NAME
                        ,ui.EMPLOYEE_NAME
                        ,ui.EMPLOYEE_ID
                        ,m.SURVEY_COMPLETE_YN
                 FROM GRADE g ,USER_INFO ui ,MAPPING m ,ORGANIZATION_CHART oc
                 WHERE
                     m.RATER_ID = ui.EMPLOYEE_ID
                    and g.grade_id = ui.grade_id and oc.department_id = ui.department_id

                 AND ((#{selection} = 'employeeName'
                    	AND ui.EMPLOYEE_NAME LIKE '%' || #{keyword} || '%')
                		OR (#{selection} = 'departmentName'
                        	AND oc.DEPARTMENT_NAME LIKE '%' || #{keyword} || '%')
                    	OR (#{selection} = 'gradeName'
                    		AND g.GRADE_NAME LIKE '%' || #{keyword} || '%')
                    	OR(#{selection} = 'surveyCompleteYn'
                    	   AND m.survey_complete_YN LIKE '%' || #{keyword} || '%')

                            )
                   		)
               where survey_seq = #{surveySeq}
               ORDER BY ROWNUM  ASC
             )

				WHERE rnum >= #{startRowNo} and rnum <= #{endRowNo}
 ]]>

</select>


	<select id="surveyList" resultType="SLD">
		SELECT
			SURVEY_SEQ
            ,SURVEY_NAME
            ,SURVEY_CONTENT
            ,ANONYMITY_CHECK_CODE
            ,to_date(SURVEY_START_DATE, 'YYYY-MM-dd')  as surveyStartDate
            ,to_date(SURVEY_CLOSED_DATE, 'YYYY-MM-dd') as surveyClosedDate
        FROM (SELECT
        		SURVEY_SEQ
                ,SURVEY_NAME
                ,SURVEY_CONTENT
                ,ANONYMITY_CHECK_CODE
                ,SURVEY_START_DATE
                ,SURVEY_CLOSED_DATE
              FROM SURVEY_LIST
              WHERE STATE_CODE = '30004')
	</select>

	<select id="organList" resultType="com.mycompany.webapp.dto.OrganizationChartDTO">
		SELECT DISTINCT
    		   U.DEPARTMENT_ID AS departmentId,
    	       DEPARTMENT_NAME
          FROM ORGANIZATION_CHART O,
               SURVEY_RESULT,
               USER_INFO U
         WHERE SURVEY_SEQ = #{surveySeq}
           AND APPRAISEE_ID = EMPLOYEE_ID
           AND U.DEPARTMENT_ID = O.DEPARTMENT_ID
      ORDER BY U.DEPARTMENT_ID
	</select>

	<select id="resultList" resultType="com.mycompany.webapp.dto.SurveyResultTeamDTO">
		SELECT AVG(SCORE) AS SCORE,
         	   DEPARTMENT_NAME
  		  FROM(
  		  	SELECT SUM(ITEM_SCORE) AS SCORE,
               EMPLOYEE_NAME,
               DEPARTMENT_NAME
          FROM SURVEY_ITEM I,
               SURVEY_RESULT R,
               ORGANIZATION_CHART O,
               USER_INFO U,
               SURVEY_QUESTION Q
         WHERE I.ITEM_SEQ = R.ITEM_SEQ
           AND R.SURVEY_SEQ = #{surveySeq}
           AND R.APPRAISEE_ID = U.EMPLOYEE_ID
           AND U.DEPARTMENT_ID = O.DEPARTMENT_ID
           AND I.QUESTION_SEQ = Q.QUESTION_SEQ
           AND Q.QUESTION_TYPE_CODE = 10001
      GROUP BY EMPLOYEE_NAME, DEPARTMENT_NAME
   	      )
   	  GROUP BY EMPLOYEE_NAME, DEPARTMENT_NAME
	</select>

	<select id="resultDPList" resultType="com.mycompany.webapp.dto.SurveyResultTeamDTO">
		SELECT SUM(ITEM_SCORE) AS SCORE,
               EMPLOYEE_NAME
          FROM SURVEY_ITEM I,
               SURVEY_RESULT R,
               USER_INFO U,
               SURVEY_QUESTION Q
         WHERE I.ITEM_SEQ = R.ITEM_SEQ
           AND R.SURVEY_SEQ = #{surveySeq}
           AND R.APPRAISEE_ID = U.EMPLOYEE_ID
           AND U.DEPARTMENT_ID = #{departmentId}
           AND I.QUESTION_SEQ = Q.QUESTION_SEQ
           AND Q.QUESTION_TYPE_CODE = 10001
      GROUP BY EMPLOYEE_NAME
	</select>

	<select id="surveyResult" resultType="com.mycompany.webapp.dto.SurveyResultDTO">
	<![CDATA[
SELECT ROWNUM AS rnum
        ,a.APPRAISEE_ID
       ,a.RATER_ID
       ,a.ANONYMITY_SEQ
       ,(SELECT DEPARTMENT_NAME
         FROM ORGANIZATION_CHART oc
             ,USER_INFO ui
         WHERE ui.EMPLOYEE_ID = RATER_ID
         AND ui.DEPARTMENT_ID = oc.DEPARTMENT_ID) RATER_DEPARTMENT_NAME
       ,(SELECT EMPLOYEE_NAME
         FROM USER_INFO
         WHERE EMPLOYEE_ID = RATER_ID) RATER_NAME
       ,(SELECT GRADE_NAME
         FROM GRADE g ,USER_INFO ui
         WHERE ui.EMPLOYEE_ID = RATER_ID
         AND ui.GRADE_ID = g.GRADE_ID) RATER_GRADE
       ,a.QUESTION_TYPE_CODE
       ,a.QUESTION_SEQ
       ,a.ITEM_SEQ
       ,a.ANSWER_CONTENT
       ,a.QUESTION_CONTENT
       ,a.ITEM_CONTENT
       ,a.ITEM_SCORE
FROM (SELECT sr.APPRAISEE_ID
            ,sr.RATER_ID
            ,sr.ANONYMITY_SEQ
            ,sq.QUESTION_TYPE_CODE
            ,sr.QUESTION_SEQ
            ,sr.ITEM_SEQ
            ,sr.ANSWER_CONTENT
            ,sq.QUESTION_CONTENT
            ,si.ITEM_CONTENT
            ,si.ITEM_SCORE
        FROM SURVEY_RESULT sr
       ,SURVEY_QUESTION sq
       ,SURVEY_ITEM si
       ,USER_INFO ui
       ,GRADE g
       ,ORGANIZATION_CHART oc
WHERE sr.QUESTION_SEQ = sq.QUESTION_SEQ
        AND sr.ITEM_SEQ = si.ITEM_SEQ
        AND sr.APPRAISEE_ID = ui.employee_id
        AND ui.GRADE_ID = g.GRADE_ID
        AND ui.DEPARTMENT_ID = oc.DEPARTMENT_ID
        AND sr.APPRAISEE_ID=#{employeeId}AND sr.SURVEY_SEQ = #{surveySeq}
ORDER BY RATER_ID, ANONYMITY_SEQ, QUESTION_SEQ) a
 ]]>
</select>


<select id="getResultTarget" parameterType="int" resultType="hashmap">
		      SELECT EMPLOYEE_NAME
                    ,GRADE_NAME
                    ,DEPARTMENT_NAME
                FROM USER_INFO ui
                    ,GRADE g
                    ,ORGANIZATION_CHART oc
                WHERE ui.GRADE_ID = g.GRADE_ID
                AND  ui.DEPARTMENT_ID = oc.DEPARTMENT_ID
                AND ui.EMPLOYEE_ID = ${employeeId}
</select>

<select id="personalStats" parameterType="int" resultType="com.mycompany.webapp.dto.SurveyResultDTO">
<![CDATA[
SELECT EMPLOYEE_NAME
     , SCORE
     , GRD
     , MAX
     , AVG
     , MIN
FROM(
    SELECT EMPLOYEE_ID
         , SCORE
         , SURVEY_SEQ
         , rk
         , rk2
         , rat
         , CASE WHEN              rat <= 10 THEN 1
                WHEN rat > 10 AND rat <= 50 THEN 2
                WHEN rat > 50 AND rat <= 90 THEN 3
                WHEN rat > 90 AND rat <= 100 THEN 4
            END grd
    FROM (
       SELECT EMPLOYEE_ID
            , SCORE
            , SURVEY_SEQ
            , rk
            , (rk + (cnt - 1) / 2) rk2
            , (rk + (cnt - 1) / 2) / tot * 100 rat
         FROM (
             SELECT EMPLOYEE_ID
                  , SCORE
                  , SURVEY_SEQ
                  , RANK() OVER(PARTITION BY SURVEY_SEQ ORDER BY score DESC) rk
                  , COUNT(*) OVER(PARTITION BY SURVEY_SEQ, score) cnt
                  , COUNT(*) OVER(PARTITION BY SURVEY_SEQ) tot
                  FROM (
                   SELECT SUM(ITEM_SCORE) AS SCORE,
                           EMPLOYEE_ID,
                           R.SURVEY_SEQ
                      FROM SURVEY_ITEM I,
                           SURVEY_RESULT R,
                           USER_INFO U,
                           SURVEY_QUESTION Q
                     WHERE I.ITEM_SEQ = R.ITEM_SEQ
                       AND R.APPRAISEE_ID = U.EMPLOYEE_ID
                       AND I.QUESTION_SEQ = Q.QUESTION_SEQ
                       AND Q.QUESTION_TYPE_CODE = 10001
                  GROUP BY EMPLOYEE_ID, R.SURVEY_SEQ) t
                )
            )
        ) S
        ,(SELECT AVG(SCORE) AS AVG,
                 MAX(SCORE) AS MAX,
                 MIN(SCORE) AS MIN,
                 SURVEY_SEQ
             FROM(
                 SELECT SUM(ITEM_SCORE) AS SCORE,
                        EMPLOYEE_NAME,
                        R.SURVEY_SEQ
                   FROM SURVEY_ITEM I,
                        SURVEY_RESULT R,
                        USER_INFO U,
                        SURVEY_QUESTION Q
                  WHERE I.ITEM_SEQ = R.ITEM_SEQ
                    AND R.APPRAISEE_ID = U.EMPLOYEE_ID
                    AND I.QUESTION_SEQ = Q.QUESTION_SEQ
                    AND Q.QUESTION_TYPE_CODE = 10001
                    AND R.SURVEY_SEQ = #{surveySeq}
                  GROUP BY EMPLOYEE_NAME, R.SURVEY_SEQ
                  )
            GROUP BY SURVEY_SEQ
         ) A
        ,USER_INFO U
WHERE S.EMPLOYEE_ID = U.EMPLOYEE_ID
  AND S.EMPLOYEE_ID = #{employeeId}
  AND A.SURVEY_SEQ = #{surveySeq}
]]>
</select>


	<select id ="getItemCnt" parameterType="int" resultType="int">
	SELECT COUNT(*)
	FROM  SURVEY_LIST SL,
	      SURVEY_QUESTION SQ,
	      SURVEY_ITEM SI
    WHERE SQ.QUESTION_SEQ = SI.QUESTION_SEQ AND
          SQ.SURVEY_SEQ = SL.SURVEY_SEQ AND
          SL.SURVEY_SEQ = #{surveySeq}
	</select>

</mapper>