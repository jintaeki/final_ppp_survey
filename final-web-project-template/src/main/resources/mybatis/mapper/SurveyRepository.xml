<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ISurveyRepository">

<<<<<<< HEAD
		<insert id="QuestionInsert" parameterType="SQD">
=======
		<insert id="setQuestInsert" parameterType="SQD">
>>>>>>> refs/remotes/origin/master
		<![CDATA[
				INSERT INTO SURVEY_QUESTION(QUESTION_SEQ
				    ,SURVEY_SEQ
				    ,QUESTION_CONTENT
				    ,QUESTION_TYPE_CODE,REG_DATE
				    ,UPDATE_DATE)
				VALUES (#{questionSeq}
				    ,#{surveySeq}
				    ,#{questionContent}
				    ,#{questionTypeCode}
				    ,sysdate
				    ,sysdate)
		]]>
	</insert>

	<select id="selectMaxQuestionId" resultType="int">

	<![CDATA[
				SELECT NVL(MAX(QUESTION_SEQ), 0) AS "questionSeq" FROM SURVEY_QUESTION
		]]>
	</select>

	<select id="selectMaxItemId"  resultType="int">
		<![CDATA[
				SELECT NVL(MAX(ITEM_SEQ), 0) AS "itemSeq" FROM SURVEY_ITEM
		]]>
	</select>

<<<<<<< HEAD
	<insert id="ItemInsert" parameterType="SQD">
=======
	<insert id="setItemInsert" parameterType="SQD">
>>>>>>> refs/remotes/origin/master
		<![CDATA[
			INSERT INTO SURVEY_ITEM(QUESTION_SEQ
			     ,ITEM_SEQ
			     ,ITEM_CONTENT
			     ,ITEM_SCORE,REG_DATE,UPDATE_DATE)
			VALUES (#{questionSeq}
			     ,#{itemSeq}
			     ,#{itemContent}
			     ,#{itemScore}
			     ,sysdate
			     ,sysdate)
		]]>
	</insert>

	<insert id="setSurvey" parameterType="SLD" >

		<selectKey keyProperty="surveySeq" resultType="int" order="BEFORE">
			SELECT SURVEY_LIST_SEQ.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO SURVEY_LIST (SURVEY_SEQ,SURVEY_NAME
		       ,SURVEY_CONTENT
		       ,ANONYMITY_CHECK_CODE
		       ,SURVEY_START_DATE
		       ,SURVEY_CLOSED_DATE
		       ,STATE_CODE
		       ,REG_DATE
		       ,UPDATE_DATE)
		VALUES(#{surveySeq}
		       ,#{surveyName}
		       ,#{surveyContent}
		       ,#{anonymityCheckCode}
		       ,TO_CHAR(#{surveyStartDate},'YYYY.MM.dd')
		       ,TO_CHAR(#{surveyClosedDate} , 'YYYY.MM.dd')
		       ,'N'
		       ,SYSDATE
		       ,SYSDATE)
	</insert>

	<update id="setSurveyUpdate" parameterType="SLD">
		UPDATE SURVEY_LIST SET SURVEY_NAME=#{surveyName}
		      ,SURVEY_CONTENT=#{surveyContent}
		      ,ANONYMITY_CHECK_CODE=#{anonymityCheckCode}
		      ,SURVEY_START_DATE=TO_CHAR(#{surveyStartDate},'YYYY.MM.dd')
		      ,SURVEY_CLOSED_DATE=TO_CHAR(#{surveyClosedDate} , 'YYYY.MM.dd')
		      ,UPDATE_DATE=sysdate  WHERE SURVEY_SEQ=#{surveySeq}
	</update>

	<insert id="setItemUpdate" parameterType="SQD" >

		<selectKey keyProperty="itemSeq" resultType="int" order="BEFORE">
			SELECT ITEM_ID_SEQ.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO SURVEY_ITEM (QUESTION_SEQ,ITEM_SEQ
		     ,ITEM_CONTENT
		     ,ITEM_SCORE
		     ,UPDATE_DATE)
		VALUES(#{questionSeq}
		     ,#{itemSeq}
		     ,#{itemContent}
		     ,#{itemScore}
		     ,SYSDATE)
	</insert>

<<<<<<< HEAD
=======
	<delete id="setItemDelete" parameterType="SQD">
		DELETE FROM SURVEY_ITEM WHERE QUESTION_SEQ = ${questionSeq}

	</delete>
>>>>>>> refs/remotes/origin/master

	<delete id="setQuestionDelete" parameterType="SQD">
		DELETE FROM SURVEY_QUESTION WHERE QUESTION_SEQ = #{questionSeq}
	</delete>

	<select id="selectQuestion" parameterType="int" resultType="hashmap">
		SELECT SQ.SURVEY_SEQ
		     ,SQ.QUESTION_SEQ
		     ,SQ.QUESTION_CONTENT
		     ,SQ.QUESTION_TYPE_CODE
		     ,SI.ITEM_SEQ
		     ,SI.ITEM_CONTENT
		     ,SI.ITEM_SCORE
		FROM SURVEY_ITEM SI
		     ,SURVEY_QUESTION SQ
		WHERE SI.QUESTION_SEQ=SQ.QUESTION_SEQ AND SURVEY_SEQ = #{surveySeq}	 ORDER BY QUESTION_SEQ DESC
	</select>

	<select id="selectSurveyList" parameterType="com.mycompany.webapp.dto.PagingDTO" resultType="com.mycompany.webapp.dto.SurveyListDTO">

<<<<<<< HEAD
		SELECT SURVEY_SEQ
		     ,SURVEY_NAME
		     ,SURVEY_CONTENT
		     ,ANONYMITY_CHECK_CODE
		     ,to_date(SURVEY_START_DATE, 'YYYY.MM.dd') as surveyStartDate
		      ,to_date(SURVEY_CLOSED_DATE, 'YYYY.MM.dd' )as surveyClosedDate
		     ,STATE_CODE
		FROM (
		      SELECT ROWNUM as rnum
		          ,SURVEY_SEQ
		          ,SURVEY_NAME,SURVEY_CONTENT
		          ,ANONYMITY_CHECK_CODE
		          ,SURVEY_START_DATE,SURVEY_CLOSED_DATE
=======
		SELECT SURVEY_SEQ 
		     ,SURVEY_NAME 
		     ,SURVEY_CONTENT 
		     ,ANONYMITY_CHECK_CODE 
		     ,to_date(SURVEY_START_DATE, 'YYYY.MM.dd') as surveyStartDate
		      ,to_date(SURVEY_CLOSED_DATE, 'YYYY.MM.dd' )as surveyClosedDate 
		     ,STATE_CODE 
		FROM (
		      SELECT ROWNUM as rnum
		          ,SURVEY_SEQ
		          ,SURVEY_NAME,SURVEY_CONTENT
		          ,ANONYMITY_CHECK_CODE
		          ,SURVEY_STARTT_DATE,SURVEY_CLOSED_DATE
>>>>>>> refs/remotes/origin/master
		          ,STATE_CODE
			  FROM (select SURVEY_SEQ
			             ,SURVEY_NAME
			             ,SURVEY_CONTENT
			             ,ANONYMITY_CHECK_CODE
			             ,SURVEY_START_DATE,SURVEY_CLOSED_DATE
			             ,STATE_CODE  FROM SURVEY_LIST
			   	    ORDER BY ROWNUM DESC
			   	)
			  WHERE ROWNUM &lt; = #{endRowNo}
			   	)
			  WHERE rnum &gt; = #{startRowNo}

	</select>

	<select id="selectSurvey" parameterType="int" resultType="SLD">
<<<<<<< HEAD
		SELECT SURVEY_SEQ
		     ,SURVEY_NAME
		     ,SURVEY_CONTENT
		     ,ANONYMITY_CHECK_CODE
=======
		SELECT SURVEY_SEQ 
		     ,SURVEY_NAME 
		     ,SURVEY_CONTENT 
		     ,ANONYMITY_CHECK_CODE 
>>>>>>> refs/remotes/origin/master
		     ,to_date(SURVEY_START_DATE, 'YYYY.MM.dd') as surveyStartDate
		      ,to_date(SURVEY_CLOSED_DATE, 'YYYY.MM.dd' )as surveyClosedDate
		     ,STATE_CODE
	   FROM SURVEY_LIST
	   WHERE SURVEY_SEQ = #{surveySeq}

	</select>

	<select id="getQuestionList" resultType="com.mycompany.webapp.dto.SurveyQuestionDTO">
<<<<<<< HEAD
		SELECT SURVEY_SEQ
		    ,QUESTION_SEQ
		    ,QUESTION_CONTENT
		    ,QUESTION_TYPE_CODE
=======
		SELECT SURVEY_SEQ 
		    ,QUESTION_SEQ 
		    ,QUESTION_CONTENT 
		    ,QUESTION_TYPE_CODE 
>>>>>>> refs/remotes/origin/master
		FROM SURVEY_QUESTION WHERE SURVEY_SEQ = #{surveySeq} order by question_seq desc
	</select>

<<<<<<< HEAD
	<update id="UpdateQuestion" parameterType="com.mycompany.webapp.dto.SurveyQuestionDTO">
=======
	<update id="setQuestUpdate" parameterType="com.mycompany.webapp.dto.SurveyQuestionDTO">
>>>>>>> refs/remotes/origin/master
		UPDATE SURVEY_QUESTION SET QUESTION_CONTENT=#{questionContent}
		    ,QUESTION_TYPE_CODE=#{questionTypeCode} WHERE QUESTION_SEQ=#{questionSeq}
	</update>

<<<<<<< HEAD
<!-- 	<update id="UpdateQTypeBySeq" parameterType="com.mycompany.webapp.dto.SurveyQuestionDTO"> -->
<!-- 		UPDATE SURVEY_QUESTION SET QUESTION_TYPE_CODE=#{questionTypeCode} WHERE QUESTION_SEQ=#{questionSeq} -->
<!-- 	</update> -->
=======
	<update id="setQuestUpdateType" parameterType="com.mycompany.webapp.dto.SurveyQuestionDTO">
		UPDATE SURVEY_QUESTION SET QUESTION_TYPE_CODE=#{questionTypeCode} WHERE QUESTION_SEQ=#{questionSeq}
	</update>
>>>>>>> refs/remotes/origin/master

	<update id="sendMessage" parameterType="int">
		UPDATE SURVEY_LIST SET 	STATE_CODE='Y' WHERE SURVEY_SEQ =#{surveySeq}
	</update>

	<select id="searchListByKeyword" parameterType="com.mycompany.webapp.dto.PagingDTO" resultType="SLD">
	<![CDATA[
<<<<<<< HEAD
		SELECT SURVEY_SEQ
		      ,SURVEY_NAME
		      ,SURVEY_CONTENT
		      ,ANONYMITY_CHECK_CODE
		      ,to_date(SURVEY_START_DATE, 'YYYY.MM.dd') as surveyStartDate
		      ,to_date(SURVEY_CLOSED_DATE, 'YYYY.MM.dd' )as surveyClosedDate
		      ,STATE_CODE
=======
		SELECT SURVEY_SEQ 
		      ,SURVEY_NAME 
		      ,SURVEY_CONTENT 
		      ,ANONYMITY_CHECK_CODE
		      ,to_date(SURVEY_START_DATE, 'YYYY.MM.dd') as surveyStartDate
		      ,to_date(SURVEY_CLOSED_DATE, 'YYYY.MM.dd' )as surveyClosedDate
		      ,STATE_CODE 
>>>>>>> refs/remotes/origin/master
	    FROM (
		SELECT ROWNUM AS rnum
		      ,SURVEY_SEQ
		      ,SURVEY_NAME
		      ,SURVEY_CONTENT
		      ,ANONYMITY_CHECK_CODE
		      ,SURVEY_START_DATE
		      ,SURVEY_CLOSED_DATE
		      ,STATE_CODE
	    FROM (SELECT SURVEY_SEQ
	          ,SURVEY_NAME
	          ,SURVEY_CONTENT
	          ,ANONYMITY_CHECK_CODE
	          ,SURVEY_START_DATE,SURVEY_CLOSED_DATE
	          ,STATE_CODE  FROM SURVEY_LIST WHERE SURVEY_NAME LIKE #{keyword}
		ORDER BY ROWNUM DESC
			   	)
			   	WHERE ROWNUM <= #{endRowNo}
			   	)
			   WHERE rnum  >= #{startRowNo}
		]]>
	</select>

	<select id="searchListByKeywordAndDicideYN"  resultType="SLD">

<<<<<<< HEAD
		SELECT SURVEY_SEQ
		      ,SURVEY_NAME
		      ,SURVEY_CONTENT
		      ,ANONYMITY_CHECK_CODE
		      ,SURVEY_START_DATE
		      ,SURVEY_CLOSED_DATE
		      ,STATE_CODE
=======
		SELECT SURVEY_SEQ 
		      ,SURVEY_NAME 
		      ,SURVEY_CONTENT 
		      ,ANONYMITY_CHECK_CODE 
		      ,SURVEY_START_DATE 
		      ,SURVEY_CLOSED_DATE
		      ,STATE_CODE 
>>>>>>> refs/remotes/origin/master
	    FROM (
	    SELECT ROWNUM AS rnum
	          ,SURVEY_SEQ
	          ,SURVEY_NAME,SURVEY_CONTENT
	          ,ANONYMITY_CHECK_CODE
	          ,SURVEY_START_DATE
	          ,SURVEY_CLOSED_DATE
	          , STATE_CODE
	    FROM (SELECt SURVEY_SEQ
	          ,SURVEY_NAME,SURVEY_CONTENT
	          ,ANONYMITY_CHECK_CODE
	          ,SURVEY_START_DATE,SURVEY_CLOSED_DATE
	          ,STATE_CODE  FROM SURVEY_LIST WHERE SURVEY_NAME LIKE #{keyword} and STATE_CODE = #{selection}
	   ORDER BY ROWNUM DESC
			   	)
			   	WHERE ROWNUM &lt; = #{endRowNo}
			   	)
			    WHERE rnum &gt; = #{startRowNo}

	</select>

	<select id="searchListByKeywordAndDate"  resultType="SLD">

<<<<<<< HEAD
		SELECT SURVEY_SEQ
		      ,SURVEY_NAME
		      ,SURVEY_CONTENT
		      ,ANONYMITY_CHECK_CODE
		      ,SURVEY_START_DATE
		      ,SURVEY_CLOSED_DATE as surveyClosedDate
		      ,STATE_CODE
=======
		SELECT SURVEY_SEQ 
		      ,SURVEY_NAME 
		      ,SURVEY_CONTENT 
		      ,ANONYMITY_CHECK_CODE 
		      ,SURVEY_START_DATE 
		      ,SURVEY_CLOSED_DATE as surveyClosedDate
		      ,STATE_CODE 
>>>>>>> refs/remotes/origin/master
			   FROM (
	    SELECT ROWNUM AS rnum
			   		,SURVEY_SEQ
			   		,SURVEY_NAME,SURVEY_CONTENT
			   		,ANONYMITY_CHECK_CODE
			   		,SURVEY_START_DATE
			   		,SURVEY_CLOSED_DATE
			   		,STATE_CODE
	    FROM (SELECT SURVEY_SEQ
	                ,SURVEY_NAME,SURVEY_CONTENT
	                ,ANONYMITY_CHECK_CODE
	                ,SURVEY_START_DATE,SURVEY_CLOSED_DATE
	                ,STATE_CODE  FROM SURVEY_LIST WHERE SURVEY_NAME LIKE #{keyword}
			   		ORDER BY SURVEY_START_DATE, ROWNUM  DESC
			   	)
			   	WHERE ROWNUM &lt; = #{endRowNo}
			   	)
			    WHERE rnum &gt; = #{startRowNo}

	</select>

	<select id="selectQuestionBySeq" parameterType="int" resultType="hashmap">
<<<<<<< HEAD
	        SELECT sq.SURVEY_SEQ
                ,sq.QUESTION_SEQ
                ,sq.QUESTION_CONTENT
                ,sq.QUESTION_TYPE_CODE
                ,si.ITEM_SEQ
                ,si.ITEM_CONTENT
                ,si.ITEM_SCORE
            FROM SURVEY_QUESTION SQ, survey_item si
            WHERE sq.QUESTION_SEQ = si.QUESTION_SEQ and sq.QUESTION_SEQ = #{questionSeq}
=======
	        SELECT sq.SURVEY_SEQ 
                ,sq.QUESTION_SEQ 
                ,sq.QUESTION_CONTENT 
                ,sq.QUESTION_TYPE_CODE 
                ,si.ITEM_SEQ	
                ,si.ITEM_CONTENT	
                ,si.ITEM_SCORE	
            FROM SURVEY_QUESTION SQ, survey_item si
            WHERE sq.QUESTION_SEQ = si.QUESTION_SEQ and sq.QUESTION_SEQ = #{questionSeq} 
>>>>>>> refs/remotes/origin/master
	</select>

<<<<<<< HEAD

	<delete id="deleteItemByQSeq" parameterType="int">
=======
	<delete id="setItemDeleteQus" parameterType="int">
>>>>>>> refs/remotes/origin/master
		DELETE FROM SURVEY_ITEM WHERE QUESTION_SEQ = #{questionSeq}
	</delete>

<<<<<<< HEAD




=======
>>>>>>> refs/remotes/origin/master
	<select id="selectItems" parameterType="int" resultType="hashmap">

<<<<<<< HEAD
		select si.ITEM_SEQ
			  ,si.QUESTION_SEQ
              ,si.ITEM_CONTENT
              ,si.ITEM_SCORE
              ,sq.QUESTION_TYPE_CODE
=======
		select si.ITEM_SEQ	
			  ,si.QUESTION_SEQ 
              ,si.ITEM_CONTENT	
              ,si.ITEM_SCORE	
              ,sq.QUESTION_TYPE_CODE 
>>>>>>> refs/remotes/origin/master
		FROM SURVEY_ITEM si, SURVEY_QUESTION sq
		WHERE si.QUESTION_SEQ = sq.QUESTION_SEQ, si.QUESTION_SEQ = #{questionSeq}
	</select>
<<<<<<< HEAD
</mapper>
=======
</mapper>
	
>>>>>>> refs/remotes/origin/master
